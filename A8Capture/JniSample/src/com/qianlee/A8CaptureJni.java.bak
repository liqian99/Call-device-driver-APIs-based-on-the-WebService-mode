package com.qianlee;

import java.io.File;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.util.StringTokenizer;

public class A8CaptureJni {
	/**
	 * We only implement these few functions, 
	 * please refer to the relevant documentation for function description
	 **/
	public native int  IO_OpenDevice(int modules);
	public native void IO_CloseDevice();
	public native int  IO_CaptureFileFullImage(String irFileName,
									           String whFileName,
									           String uvFileName);
	public native int  IO_CaptureBuf(byte[] ir,int[] irw,int[] irh,int[] irbits,
                                     byte[] wh,int[] whw, int[] whh, int[] whbits,
                                     byte[] uv,int[] uvw, int[] uvh, int[] uvbits,
                                     int cardtype);
    public native int  IO_SaveFile(String fileName,byte[] img, int w, int h, int bits,int quality);
    
    
    /**
	 * Load library
	 **/
	static {
	   System.load("D:/Work/Web/WebService/A8Capture/A8CaptureNative/lib/A8CaptureJni.dll");	
	}
	
    /**
	 * Dynamically load DLLs
	 **/
//	static {
//		try {
//			final String LIBFILENAME = "D:/Work/Web/WebService/A8Capture/A8CaptureNative/lib/A8CaptureJni.dll";
//			
//			//Get java.library.path
//			String libpath = System.getProperty("java.library.path");
//			if (libpath == null || libpath.length() == 0) {
//				throw new RuntimeException("java.library.path is null");
//			}
//			//Get jdk bin path 
//			String javaBinPath = null;
//			StringTokenizer st = new StringTokenizer(libpath,
//					System.getProperty("path.separator"));
//			if (st.hasMoreElements()) {
//				javaBinPath = st.nextToken();
//			} else {
//				throw new RuntimeException("can not split library path:"
//						+ libpath);
//			}
//			// 
//			InputStream inputStream = A8CaptureJni.class.getResourceAsStream(
//					LIBFILENAME);
//			final File dllFile = new File(LIBFILENAME);
//			if (!dllFile.exists()) {
//				FileOutputStream outputStream = new FileOutputStream(dllFile);
//				byte[] array = new byte[1024];
//				int bytesRead = -1;
//				while ((bytesRead = inputStream.read(array)) != -1) {
//					outputStream.write(array, 0, bytesRead);
//				}
//				outputStream.flush();
//				outputStream.close();
//			}
//			// Dynamically load DLLs
//			System.load(dllFile.getPath());
//			// 
//			dllFile.deleteOnExit();
//		} catch (Throwable e) {
//			throw new RuntimeException("load Convert.dll error!", e);
//		}
//	}
}
